version: '3.8'

services:
  jenkins:
    build:
      context: .
      dockerfile: jenkins/Dockerfile
    container_name: jenkins
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "50000:50000"
    environment:
      - JENKINS_ADMIN_PASSWORD=${JENKINS_ADMIN_PASSWORD:-admin123}
      - JENKINS_DEV_PASSWORD=${JENKINS_DEV_PASSWORD:-dev123}
      - DOCKER_REGISTRY=${DOCKER_REGISTRY:-your-registry.com}
      - DOCKER_REGISTRY_USER=${DOCKER_REGISTRY_USER}
      - DOCKER_REGISTRY_PASSWORD=${DOCKER_REGISTRY_PASSWORD}
      - SONARQUBE_URL=http://sonarqube:9000
      - SONARQUBE_TOKEN=${SONARQUBE_TOKEN}
      - KUBECONFIG_B64=${KUBECONFIG_B64}
      - GIT_USERNAME=${GIT_USERNAME}
      - GIT_TOKEN=${GIT_TOKEN}
      - SLACK_TOKEN=${SLACK_TOKEN}
      - SLACK_BASE_URL=${SLACK_BASE_URL}
      - SLACK_TEAM_DOMAIN=${SLACK_TEAM_DOMAIN}
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins-network
    depends_on:
      - sonarqube
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/login"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - jenkins-network
    depends_on:
      - sonarqube-db

  sonarqube-db:
    image: postgres:15
    container_name: sonarqube-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - postgresql_sonar_data:/var/lib/postgresql/data
    networks:
      - jenkins-network

  # OWASP ZAP para DAST
  zap:
    image: owasp/zap2docker-stable
    container_name: zap
    command: zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true
    ports:
      - "8081:8080"
    networks:
      - jenkins-network

volumes:
  jenkins_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql_sonar_data:

networks:
  jenkins-network:
    driver: bridge